// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ActivityRequest struct {
	Amount               uint32   `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	User                 string   `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivityRequest) Reset()         { *m = ActivityRequest{} }
func (m *ActivityRequest) String() string { return proto.CompactTextString(m) }
func (*ActivityRequest) ProtoMessage()    {}
func (*ActivityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *ActivityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityRequest.Unmarshal(m, b)
}
func (m *ActivityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityRequest.Marshal(b, m, deterministic)
}
func (m *ActivityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityRequest.Merge(m, src)
}
func (m *ActivityRequest) XXX_Size() int {
	return xxx_messageInfo_ActivityRequest.Size(m)
}
func (m *ActivityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityRequest proto.InternalMessageInfo

func (m *ActivityRequest) GetAmount() uint32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ActivityRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type ActivityResponse struct {
	Entries              uint32   `protobuf:"varint,1,opt,name=entries,proto3" json:"entries,omitempty"`
	ElapsedTime          float64  `protobuf:"fixed64,2,opt,name=elapsed_time,json=elapsedTime,proto3" json:"elapsed_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivityResponse) Reset()         { *m = ActivityResponse{} }
func (m *ActivityResponse) String() string { return proto.CompactTextString(m) }
func (*ActivityResponse) ProtoMessage()    {}
func (*ActivityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *ActivityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityResponse.Unmarshal(m, b)
}
func (m *ActivityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityResponse.Marshal(b, m, deterministic)
}
func (m *ActivityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityResponse.Merge(m, src)
}
func (m *ActivityResponse) XXX_Size() int {
	return xxx_messageInfo_ActivityResponse.Size(m)
}
func (m *ActivityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityResponse proto.InternalMessageInfo

func (m *ActivityResponse) GetEntries() uint32 {
	if m != nil {
		return m.Entries
	}
	return 0
}

func (m *ActivityResponse) GetElapsedTime() float64 {
	if m != nil {
		return m.ElapsedTime
	}
	return 0
}

type ActivityItem struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Activities           map[string]uint32 `protobuf:"bytes,2,rep,name=activities,proto3" json:"activities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ActivityItem) Reset()         { *m = ActivityItem{} }
func (m *ActivityItem) String() string { return proto.CompactTextString(m) }
func (*ActivityItem) ProtoMessage()    {}
func (*ActivityItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *ActivityItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityItem.Unmarshal(m, b)
}
func (m *ActivityItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityItem.Marshal(b, m, deterministic)
}
func (m *ActivityItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityItem.Merge(m, src)
}
func (m *ActivityItem) XXX_Size() int {
	return xxx_messageInfo_ActivityItem.Size(m)
}
func (m *ActivityItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityItem.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityItem proto.InternalMessageInfo

func (m *ActivityItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ActivityItem) GetActivities() map[string]uint32 {
	if m != nil {
		return m.Activities
	}
	return nil
}

type NameVal struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Val                  uint32   `protobuf:"varint,2,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NameVal) Reset()         { *m = NameVal{} }
func (m *NameVal) String() string { return proto.CompactTextString(m) }
func (*NameVal) ProtoMessage()    {}
func (*NameVal) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *NameVal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameVal.Unmarshal(m, b)
}
func (m *NameVal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameVal.Marshal(b, m, deterministic)
}
func (m *NameVal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameVal.Merge(m, src)
}
func (m *NameVal) XXX_Size() int {
	return xxx_messageInfo_NameVal.Size(m)
}
func (m *NameVal) XXX_DiscardUnknown() {
	xxx_messageInfo_NameVal.DiscardUnknown(m)
}

var xxx_messageInfo_NameVal proto.InternalMessageInfo

func (m *NameVal) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NameVal) GetVal() uint32 {
	if m != nil {
		return m.Val
	}
	return 0
}

type ColRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ColRequest) Reset()         { *m = ColRequest{} }
func (m *ColRequest) String() string { return proto.CompactTextString(m) }
func (*ColRequest) ProtoMessage()    {}
func (*ColRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *ColRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ColRequest.Unmarshal(m, b)
}
func (m *ColRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ColRequest.Marshal(b, m, deterministic)
}
func (m *ColRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ColRequest.Merge(m, src)
}
func (m *ColRequest) XXX_Size() int {
	return xxx_messageInfo_ColRequest.Size(m)
}
func (m *ColRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ColRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ColRequest proto.InternalMessageInfo

func (m *ColRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type IncRequest struct {
	Amount               int32    `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Names                []string `protobuf:"bytes,3,rep,name=names,proto3" json:"names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncRequest) Reset()         { *m = IncRequest{} }
func (m *IncRequest) String() string { return proto.CompactTextString(m) }
func (*IncRequest) ProtoMessage()    {}
func (*IncRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *IncRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncRequest.Unmarshal(m, b)
}
func (m *IncRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncRequest.Marshal(b, m, deterministic)
}
func (m *IncRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncRequest.Merge(m, src)
}
func (m *IncRequest) XXX_Size() int {
	return xxx_messageInfo_IncRequest.Size(m)
}
func (m *IncRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IncRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IncRequest proto.InternalMessageInfo

func (m *IncRequest) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *IncRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *IncRequest) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

type ActivityKeys struct {
	Keys                 []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivityKeys) Reset()         { *m = ActivityKeys{} }
func (m *ActivityKeys) String() string { return proto.CompactTextString(m) }
func (*ActivityKeys) ProtoMessage()    {}
func (*ActivityKeys) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *ActivityKeys) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityKeys.Unmarshal(m, b)
}
func (m *ActivityKeys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityKeys.Marshal(b, m, deterministic)
}
func (m *ActivityKeys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityKeys.Merge(m, src)
}
func (m *ActivityKeys) XXX_Size() int {
	return xxx_messageInfo_ActivityKeys.Size(m)
}
func (m *ActivityKeys) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityKeys.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityKeys proto.InternalMessageInfo

func (m *ActivityKeys) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type KeyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyRequest) Reset()         { *m = KeyRequest{} }
func (m *KeyRequest) String() string { return proto.CompactTextString(m) }
func (*KeyRequest) ProtoMessage()    {}
func (*KeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *KeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyRequest.Unmarshal(m, b)
}
func (m *KeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyRequest.Marshal(b, m, deterministic)
}
func (m *KeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyRequest.Merge(m, src)
}
func (m *KeyRequest) XXX_Size() int {
	return xxx_messageInfo_KeyRequest.Size(m)
}
func (m *KeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KeyRequest proto.InternalMessageInfo

type DeleteRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*ActivityRequest)(nil), "api.ActivityRequest")
	proto.RegisterType((*ActivityResponse)(nil), "api.ActivityResponse")
	proto.RegisterType((*ActivityItem)(nil), "api.ActivityItem")
	proto.RegisterMapType((map[string]uint32)(nil), "api.ActivityItem.ActivitiesEntry")
	proto.RegisterType((*NameVal)(nil), "api.NameVal")
	proto.RegisterType((*ColRequest)(nil), "api.ColRequest")
	proto.RegisterType((*IncRequest)(nil), "api.IncRequest")
	proto.RegisterType((*ActivityKeys)(nil), "api.ActivityKeys")
	proto.RegisterType((*KeyRequest)(nil), "api.KeyRequest")
	proto.RegisterType((*DeleteRequest)(nil), "api.DeleteRequest")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 471 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x4d, 0x6b, 0xdb, 0x40,
	0x10, 0xb5, 0xac, 0x26, 0xc6, 0x13, 0x8b, 0xb8, 0xd3, 0xb4, 0x18, 0x1f, 0x8a, 0xb3, 0xbd, 0xe8,
	0x94, 0x94, 0xf4, 0x12, 0xda, 0xa4, 0x60, 0xd2, 0x12, 0x4c, 0xfa, 0x01, 0xea, 0xd7, 0xb1, 0x6c,
	0xec, 0x39, 0x2c, 0xd1, 0xae, 0x54, 0xed, 0xca, 0xa0, 0xff, 0xd3, 0xff, 0xd8, 0x6b, 0xd9, 0x95,
	0x36, 0xb2, 0x63, 0xe3, 0x43, 0x6e, 0x33, 0xd2, 0xbc, 0xf7, 0x66, 0xe6, 0x0d, 0x0b, 0x7d, 0x9e,
	0x8b, 0x93, 0xbc, 0xc8, 0x4c, 0x86, 0x21, 0xcf, 0x05, 0xbb, 0x84, 0xc3, 0xe9, 0xdc, 0x88, 0xa5,
	0x30, 0x55, 0x42, 0x7f, 0x4a, 0xd2, 0x06, 0x5f, 0xc0, 0x3e, 0x97, 0x59, 0xa9, 0xcc, 0x28, 0x98,
	0x04, 0x71, 0x94, 0x34, 0x19, 0x22, 0x3c, 0x29, 0x35, 0x15, 0xa3, 0xee, 0x24, 0x88, 0xfb, 0x89,
	0x8b, 0xd9, 0x57, 0x18, 0xb6, 0x70, 0x9d, 0x67, 0x4a, 0x13, 0x8e, 0xa0, 0x47, 0xca, 0x14, 0x82,
	0x74, 0x43, 0xe0, 0x53, 0x3c, 0x86, 0x01, 0xa5, 0x3c, 0xd7, 0xb4, 0xf8, 0x6d, 0x84, 0x24, 0xc7,
	0x14, 0x24, 0x07, 0xcd, 0xb7, 0xef, 0x42, 0x12, 0xfb, 0x1b, 0xc0, 0xc0, 0x33, 0xce, 0x0c, 0x49,
	0xab, 0xaa, 0xb8, 0x24, 0x47, 0xd5, 0x4f, 0x5c, 0x8c, 0x53, 0x00, 0x5e, 0xd7, 0x58, 0x91, 0xee,
	0x24, 0x8c, 0x0f, 0xce, 0x8e, 0x4f, 0xec, 0x64, 0xab, 0x50, 0x9f, 0x08, 0xd2, 0x1f, 0x95, 0x29,
	0xaa, 0x64, 0x05, 0x34, 0x6e, 0xe7, 0xf6, 0xbf, 0x71, 0x08, 0xe1, 0x1d, 0x55, 0x8d, 0x90, 0x0d,
	0xf1, 0x08, 0xf6, 0x96, 0x3c, 0x2d, 0xeb, 0x46, 0xa3, 0xa4, 0x4e, 0xde, 0x76, 0xcf, 0x03, 0x76,
	0x0a, 0xbd, 0x2f, 0x5c, 0xd2, 0x4f, 0x9e, 0x6e, 0x6d, 0x70, 0x08, 0xe1, 0x92, 0xa7, 0x0d, 0xcc,
	0x86, 0xec, 0x25, 0xc0, 0x55, 0x96, 0xfa, 0x15, 0x6f, 0x48, 0xb1, 0x4f, 0x00, 0x33, 0x35, 0xdf,
	0x6e, 0xc1, 0xde, 0xbd, 0x05, 0x0d, 0xae, 0xbb, 0xd6, 0xa2, 0x55, 0xd4, 0xa3, 0x70, 0x12, 0xc6,
	0xfd, 0xa4, 0x4e, 0x18, 0x6b, 0x97, 0x78, 0x43, 0x95, 0xb6, 0x3d, 0xde, 0x51, 0x65, 0xfd, 0xb0,
	0x45, 0x2e, 0x66, 0x03, 0x80, 0x1b, 0xf2, 0xa6, 0xb3, 0x57, 0x10, 0x7d, 0xa0, 0x94, 0x0c, 0xf9,
	0x16, 0xb6, 0x8c, 0x75, 0xf6, 0x2f, 0x6c, 0xaf, 0xe5, 0x1b, 0x15, 0x4b, 0x31, 0x27, 0xbc, 0x80,
	0xe8, 0x9a, 0x4c, 0xbb, 0x4b, 0x3c, 0x5a, 0x33, 0xa2, 0xa1, 0x1b, 0x3f, 0xdd, 0xb0, 0x87, 0x75,
	0x5e, 0x07, 0x78, 0x01, 0x83, 0x5f, 0x85, 0x30, 0xf4, 0x99, 0xe4, 0x2d, 0x15, 0x1a, 0x37, 0xcb,
	0xc6, 0xcf, 0x1f, 0xf0, 0xd5, 0x57, 0xc6, 0x3a, 0x71, 0x80, 0x97, 0x10, 0xfd, 0xc8, 0x17, 0xfc,
	0xb1, 0xf0, 0xf7, 0x7e, 0x66, 0x0f, 0x47, 0x57, 0xbb, 0xb6, 0x87, 0x5d, 0xf8, 0x73, 0x80, 0xe9,
	0x62, 0x71, 0x95, 0xa5, 0xa5, 0x54, 0x1a, 0x0f, 0x5d, 0x61, 0x6b, 0xf2, 0x2e, 0xe4, 0x3b, 0xaf,
	0xfc, 0x18, 0xf0, 0x14, 0x9e, 0xcd, 0xd4, 0xbc, 0x20, 0x49, 0x6a, 0x75, 0xef, 0x35, 0x45, 0x7b,
	0x44, 0xbb, 0x28, 0x4e, 0xa1, 0x77, 0x4d, 0xc6, 0x9d, 0x46, 0x0d, 0x6b, 0x2f, 0xe1, 0x81, 0x53,
	0xb6, 0x86, 0x75, 0x6e, 0xf7, 0xdd, 0x93, 0xf1, 0xe6, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x25,
	0x5a, 0x36, 0x11, 0x3f, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ActivityServiceClient is the client API for ActivityService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ActivityServiceClient interface {
	GetActivities(ctx context.Context, in *ActivityRequest, opts ...grpc.CallOption) (ActivityService_GetActivitiesClient, error)
	WriteMembers(ctx context.Context, opts ...grpc.CallOption) (ActivityService_WriteMembersClient, error)
	UpdateMembers(ctx context.Context, opts ...grpc.CallOption) (ActivityService_UpdateMembersClient, error)
	DeleteMembers(ctx context.Context, opts ...grpc.CallOption) (ActivityService_DeleteMembersClient, error)
	AddColumns(ctx context.Context, opts ...grpc.CallOption) (ActivityService_AddColumnsClient, error)
	DeleteColumns(ctx context.Context, opts ...grpc.CallOption) (ActivityService_DeleteColumnsClient, error)
	IncrementActivities(ctx context.Context, opts ...grpc.CallOption) (ActivityService_IncrementActivitiesClient, error)
	GetKeys(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*ActivityKeys, error)
}

type activityServiceClient struct {
	cc *grpc.ClientConn
}

func NewActivityServiceClient(cc *grpc.ClientConn) ActivityServiceClient {
	return &activityServiceClient{cc}
}

func (c *activityServiceClient) GetActivities(ctx context.Context, in *ActivityRequest, opts ...grpc.CallOption) (ActivityService_GetActivitiesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ActivityService_serviceDesc.Streams[0], "/api.ActivityService/GetActivities", opts...)
	if err != nil {
		return nil, err
	}
	x := &activityServiceGetActivitiesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ActivityService_GetActivitiesClient interface {
	Recv() (*ActivityItem, error)
	grpc.ClientStream
}

type activityServiceGetActivitiesClient struct {
	grpc.ClientStream
}

func (x *activityServiceGetActivitiesClient) Recv() (*ActivityItem, error) {
	m := new(ActivityItem)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *activityServiceClient) WriteMembers(ctx context.Context, opts ...grpc.CallOption) (ActivityService_WriteMembersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ActivityService_serviceDesc.Streams[1], "/api.ActivityService/WriteMembers", opts...)
	if err != nil {
		return nil, err
	}
	x := &activityServiceWriteMembersClient{stream}
	return x, nil
}

type ActivityService_WriteMembersClient interface {
	Send(*ActivityItem) error
	CloseAndRecv() (*ActivityResponse, error)
	grpc.ClientStream
}

type activityServiceWriteMembersClient struct {
	grpc.ClientStream
}

func (x *activityServiceWriteMembersClient) Send(m *ActivityItem) error {
	return x.ClientStream.SendMsg(m)
}

func (x *activityServiceWriteMembersClient) CloseAndRecv() (*ActivityResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ActivityResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *activityServiceClient) UpdateMembers(ctx context.Context, opts ...grpc.CallOption) (ActivityService_UpdateMembersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ActivityService_serviceDesc.Streams[2], "/api.ActivityService/UpdateMembers", opts...)
	if err != nil {
		return nil, err
	}
	x := &activityServiceUpdateMembersClient{stream}
	return x, nil
}

type ActivityService_UpdateMembersClient interface {
	Send(*ActivityItem) error
	CloseAndRecv() (*ActivityResponse, error)
	grpc.ClientStream
}

type activityServiceUpdateMembersClient struct {
	grpc.ClientStream
}

func (x *activityServiceUpdateMembersClient) Send(m *ActivityItem) error {
	return x.ClientStream.SendMsg(m)
}

func (x *activityServiceUpdateMembersClient) CloseAndRecv() (*ActivityResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ActivityResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *activityServiceClient) DeleteMembers(ctx context.Context, opts ...grpc.CallOption) (ActivityService_DeleteMembersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ActivityService_serviceDesc.Streams[3], "/api.ActivityService/DeleteMembers", opts...)
	if err != nil {
		return nil, err
	}
	x := &activityServiceDeleteMembersClient{stream}
	return x, nil
}

type ActivityService_DeleteMembersClient interface {
	Send(*DeleteRequest) error
	CloseAndRecv() (*ActivityResponse, error)
	grpc.ClientStream
}

type activityServiceDeleteMembersClient struct {
	grpc.ClientStream
}

func (x *activityServiceDeleteMembersClient) Send(m *DeleteRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *activityServiceDeleteMembersClient) CloseAndRecv() (*ActivityResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ActivityResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *activityServiceClient) AddColumns(ctx context.Context, opts ...grpc.CallOption) (ActivityService_AddColumnsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ActivityService_serviceDesc.Streams[4], "/api.ActivityService/AddColumns", opts...)
	if err != nil {
		return nil, err
	}
	x := &activityServiceAddColumnsClient{stream}
	return x, nil
}

type ActivityService_AddColumnsClient interface {
	Send(*ColRequest) error
	CloseAndRecv() (*ActivityResponse, error)
	grpc.ClientStream
}

type activityServiceAddColumnsClient struct {
	grpc.ClientStream
}

func (x *activityServiceAddColumnsClient) Send(m *ColRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *activityServiceAddColumnsClient) CloseAndRecv() (*ActivityResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ActivityResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *activityServiceClient) DeleteColumns(ctx context.Context, opts ...grpc.CallOption) (ActivityService_DeleteColumnsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ActivityService_serviceDesc.Streams[5], "/api.ActivityService/DeleteColumns", opts...)
	if err != nil {
		return nil, err
	}
	x := &activityServiceDeleteColumnsClient{stream}
	return x, nil
}

type ActivityService_DeleteColumnsClient interface {
	Send(*ColRequest) error
	CloseAndRecv() (*ActivityResponse, error)
	grpc.ClientStream
}

type activityServiceDeleteColumnsClient struct {
	grpc.ClientStream
}

func (x *activityServiceDeleteColumnsClient) Send(m *ColRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *activityServiceDeleteColumnsClient) CloseAndRecv() (*ActivityResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ActivityResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *activityServiceClient) IncrementActivities(ctx context.Context, opts ...grpc.CallOption) (ActivityService_IncrementActivitiesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ActivityService_serviceDesc.Streams[6], "/api.ActivityService/IncrementActivities", opts...)
	if err != nil {
		return nil, err
	}
	x := &activityServiceIncrementActivitiesClient{stream}
	return x, nil
}

type ActivityService_IncrementActivitiesClient interface {
	Send(*IncRequest) error
	CloseAndRecv() (*ActivityResponse, error)
	grpc.ClientStream
}

type activityServiceIncrementActivitiesClient struct {
	grpc.ClientStream
}

func (x *activityServiceIncrementActivitiesClient) Send(m *IncRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *activityServiceIncrementActivitiesClient) CloseAndRecv() (*ActivityResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ActivityResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *activityServiceClient) GetKeys(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*ActivityKeys, error) {
	out := new(ActivityKeys)
	err := c.cc.Invoke(ctx, "/api.ActivityService/GetKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ActivityServiceServer is the server API for ActivityService service.
type ActivityServiceServer interface {
	GetActivities(*ActivityRequest, ActivityService_GetActivitiesServer) error
	WriteMembers(ActivityService_WriteMembersServer) error
	UpdateMembers(ActivityService_UpdateMembersServer) error
	DeleteMembers(ActivityService_DeleteMembersServer) error
	AddColumns(ActivityService_AddColumnsServer) error
	DeleteColumns(ActivityService_DeleteColumnsServer) error
	IncrementActivities(ActivityService_IncrementActivitiesServer) error
	GetKeys(context.Context, *KeyRequest) (*ActivityKeys, error)
}

// UnimplementedActivityServiceServer can be embedded to have forward compatible implementations.
type UnimplementedActivityServiceServer struct {
}

func (*UnimplementedActivityServiceServer) GetActivities(req *ActivityRequest, srv ActivityService_GetActivitiesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetActivities not implemented")
}
func (*UnimplementedActivityServiceServer) WriteMembers(srv ActivityService_WriteMembersServer) error {
	return status.Errorf(codes.Unimplemented, "method WriteMembers not implemented")
}
func (*UnimplementedActivityServiceServer) UpdateMembers(srv ActivityService_UpdateMembersServer) error {
	return status.Errorf(codes.Unimplemented, "method UpdateMembers not implemented")
}
func (*UnimplementedActivityServiceServer) DeleteMembers(srv ActivityService_DeleteMembersServer) error {
	return status.Errorf(codes.Unimplemented, "method DeleteMembers not implemented")
}
func (*UnimplementedActivityServiceServer) AddColumns(srv ActivityService_AddColumnsServer) error {
	return status.Errorf(codes.Unimplemented, "method AddColumns not implemented")
}
func (*UnimplementedActivityServiceServer) DeleteColumns(srv ActivityService_DeleteColumnsServer) error {
	return status.Errorf(codes.Unimplemented, "method DeleteColumns not implemented")
}
func (*UnimplementedActivityServiceServer) IncrementActivities(srv ActivityService_IncrementActivitiesServer) error {
	return status.Errorf(codes.Unimplemented, "method IncrementActivities not implemented")
}
func (*UnimplementedActivityServiceServer) GetKeys(ctx context.Context, req *KeyRequest) (*ActivityKeys, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKeys not implemented")
}

func RegisterActivityServiceServer(s *grpc.Server, srv ActivityServiceServer) {
	s.RegisterService(&_ActivityService_serviceDesc, srv)
}

func _ActivityService_GetActivities_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ActivityRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ActivityServiceServer).GetActivities(m, &activityServiceGetActivitiesServer{stream})
}

type ActivityService_GetActivitiesServer interface {
	Send(*ActivityItem) error
	grpc.ServerStream
}

type activityServiceGetActivitiesServer struct {
	grpc.ServerStream
}

func (x *activityServiceGetActivitiesServer) Send(m *ActivityItem) error {
	return x.ServerStream.SendMsg(m)
}

func _ActivityService_WriteMembers_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ActivityServiceServer).WriteMembers(&activityServiceWriteMembersServer{stream})
}

type ActivityService_WriteMembersServer interface {
	SendAndClose(*ActivityResponse) error
	Recv() (*ActivityItem, error)
	grpc.ServerStream
}

type activityServiceWriteMembersServer struct {
	grpc.ServerStream
}

func (x *activityServiceWriteMembersServer) SendAndClose(m *ActivityResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *activityServiceWriteMembersServer) Recv() (*ActivityItem, error) {
	m := new(ActivityItem)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ActivityService_UpdateMembers_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ActivityServiceServer).UpdateMembers(&activityServiceUpdateMembersServer{stream})
}

type ActivityService_UpdateMembersServer interface {
	SendAndClose(*ActivityResponse) error
	Recv() (*ActivityItem, error)
	grpc.ServerStream
}

type activityServiceUpdateMembersServer struct {
	grpc.ServerStream
}

func (x *activityServiceUpdateMembersServer) SendAndClose(m *ActivityResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *activityServiceUpdateMembersServer) Recv() (*ActivityItem, error) {
	m := new(ActivityItem)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ActivityService_DeleteMembers_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ActivityServiceServer).DeleteMembers(&activityServiceDeleteMembersServer{stream})
}

type ActivityService_DeleteMembersServer interface {
	SendAndClose(*ActivityResponse) error
	Recv() (*DeleteRequest, error)
	grpc.ServerStream
}

type activityServiceDeleteMembersServer struct {
	grpc.ServerStream
}

func (x *activityServiceDeleteMembersServer) SendAndClose(m *ActivityResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *activityServiceDeleteMembersServer) Recv() (*DeleteRequest, error) {
	m := new(DeleteRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ActivityService_AddColumns_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ActivityServiceServer).AddColumns(&activityServiceAddColumnsServer{stream})
}

type ActivityService_AddColumnsServer interface {
	SendAndClose(*ActivityResponse) error
	Recv() (*ColRequest, error)
	grpc.ServerStream
}

type activityServiceAddColumnsServer struct {
	grpc.ServerStream
}

func (x *activityServiceAddColumnsServer) SendAndClose(m *ActivityResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *activityServiceAddColumnsServer) Recv() (*ColRequest, error) {
	m := new(ColRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ActivityService_DeleteColumns_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ActivityServiceServer).DeleteColumns(&activityServiceDeleteColumnsServer{stream})
}

type ActivityService_DeleteColumnsServer interface {
	SendAndClose(*ActivityResponse) error
	Recv() (*ColRequest, error)
	grpc.ServerStream
}

type activityServiceDeleteColumnsServer struct {
	grpc.ServerStream
}

func (x *activityServiceDeleteColumnsServer) SendAndClose(m *ActivityResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *activityServiceDeleteColumnsServer) Recv() (*ColRequest, error) {
	m := new(ColRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ActivityService_IncrementActivities_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ActivityServiceServer).IncrementActivities(&activityServiceIncrementActivitiesServer{stream})
}

type ActivityService_IncrementActivitiesServer interface {
	SendAndClose(*ActivityResponse) error
	Recv() (*IncRequest, error)
	grpc.ServerStream
}

type activityServiceIncrementActivitiesServer struct {
	grpc.ServerStream
}

func (x *activityServiceIncrementActivitiesServer) SendAndClose(m *ActivityResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *activityServiceIncrementActivitiesServer) Recv() (*IncRequest, error) {
	m := new(IncRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ActivityService_GetKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityServiceServer).GetKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ActivityService/GetKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityServiceServer).GetKeys(ctx, req.(*KeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ActivityService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ActivityService",
	HandlerType: (*ActivityServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetKeys",
			Handler:    _ActivityService_GetKeys_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetActivities",
			Handler:       _ActivityService_GetActivities_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "WriteMembers",
			Handler:       _ActivityService_WriteMembers_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "UpdateMembers",
			Handler:       _ActivityService_UpdateMembers_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "DeleteMembers",
			Handler:       _ActivityService_DeleteMembers_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "AddColumns",
			Handler:       _ActivityService_AddColumns_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "DeleteColumns",
			Handler:       _ActivityService_DeleteColumns_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "IncrementActivities",
			Handler:       _ActivityService_IncrementActivities_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "api.proto",
}
